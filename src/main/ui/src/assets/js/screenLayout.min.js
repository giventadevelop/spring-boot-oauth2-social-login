/*jquery for layout builder
@author: sourav nandan
 */
var section1Events = new Array();
var section2Events = new Array();

function initScreenLayoutBuilder() {
	// get media files
	$.getJSON("getfiles", {
		tags: "cat"
	}, function (a) {
		var b = [""];
		var mTitle;
		filesdata = a;
		$.each(a.files, function (a, c) {
			mTitle = c.filename +"<br/><p>Duration: "+c.duration+"<br/>Filetype: "+c.filetype+"<br/>Description:<br/>"+c.description+"</p>";
			
			b.push('<div class="external-event ui-draggable" style="float:left;position:relative; z-index:auto; left:0px; top:0px;">');
			b.push('<div id="url" style="display:none;" class="e_url">'+c.thumburl+'</div>');
			b.push('<div id="fileid" style="display:none;" class="e_id">'+c.fileid+'</div>');
			b.push('<img style="float:left;" class="m_img" src="'+c.thumburl+'" />');
			b.push('<div style="float:left; width:90px;" id="title"><a class="tip" href="#" title="'+mTitle+'">'+c.filename+'</a></div>');
			b.push('</div>');
			
			nffile = a;
		});

		$("#nooffiles").html("Files present:" + nffile);
		$("#external-events").append(b.join(""));
		$("#external-events").css('width','170px');
		$("#external-events").css('height','500px');
		$("#external-events").css('overflow','auto');
		
		loadTips();
		
		$("#external-events div.ui-draggable").each(function () {
			// add draggable handle
			$(this).draggable({
				zIndex: 999,
				revert: true,
				revertDuration: 0,
				helper: 'clone',
				appendTo: 'body'
			});
		});
	});

	// get playlists
	$.getJSON("getMediaOnlyPlayList", {
		tags : "tags"
	}, function (a) {
		var b = [""];
		var pTitle;
		filesdata = a;

		$.each(a.playlist, function (a, items) {
			pTitle = items.title +"<br/><p>Duration: "+items.duration+"<br/>Filetype: "+items.filetype+"<br/>Background Playlist: "+(items.playbackground > 0 ? 'Yes' : 'No')+"<br/>Description:<br/>"+items.description+"</p>";
			b.push('<div class="external-event ui-draggable">');
			b.push('<a href="javascript:void(0);" class="tip" title="'+pTitle+'">');
			b.push('<div id="playlistid" class="e_id" style="display:none;">'+items.id+'</div>');
			b.push('<div id="playbackground" style="display:none;">'+items.playbackground+'</div>');
			b.push('<div class="title">'+items.title+'</div>');
			b.push('</a></div>');
		});

		$("#playlist-content").append(b.join(""));
		$("#playlist-content").css('height','250px');
		$("#playlist-content").css('overflow','auto');
		
		loadTips();
		
		$("#playlist-content div.ui-draggable").each(function () {
			// add draggable handle
			$(this).draggable({
				zIndex: 999,
				revert: true,
				revertDuration: 0,
				helper: 'clone',
				appendTo: 'body'
			});
		});
	});
	
	// rss and weather feeds
	var b = [""];
	
	// rss
	b.push('<h4>RSS</h4><div class="external-event ui-draggable" style="position: relative; z-index: auto; left: 0px; top: 0px; width:50px;">');
	b.push('<div id="imgid" class="e_id" style="display:none;">1</div>');
	b.push('<div id="isRssFeed" style="display:none;">1</div>');
	b.push('<div id="isWeatherFeed" style="display:none;">0</div>');
	b.push('<div id="title" style="display:none;">RSS</div>');
	b.push('<div><img src="images/rss_icon.jpg" alt="Loading" /></div>');
	b.push('</div>');

	// weather
	b.push('<h4>Weather</h4><div class="external-event ui-draggable" style="position: relative; z-index: auto; left: 0px; top: 0px; width:50px;">');
	b.push('<div id="imgid" class="e_id" style="display:none;">1</div>');
	b.push('<div id="isRssFeed" style="display:none;">0</div>');
	b.push('<div id="isWeatherFeed" style="display:none;">1</div>');
	b.push('<div id="title" style="display:none;">Weather</div>');
	b.push('<div><img src="images/weather_icon.png" alt="Loading" /></div>');
	b.push('</div>');

	$("#rss_and_weather").append(b.join(""));
	$("#rss_and_weather").css('height','250px');
	$("#rss_and_weather").css('overflow','auto');
	
	$("#rss_and_weather div.ui-draggable").each(function () {
		// add draggable handle
		$(this).draggable({
			zIndex: 999,
			revert: true,
			revertDuration: 0,
			helper: 'clone',
			appendTo: 'body'
		});
	});
	
	// get screen layouts
	loadScreenLayouts();
	
	// set width of center col container relative to screen size
	var sw = $(window).width();
	$('#centerCol').width(sw-500);
	
	// close form
	$("#close, #btn-close").click(function (a) {
		// prevent default click action
        a.preventDefault();
        
        closeDetailsWindow();
	});
	
	// submit form
	$('#update').click(function(event) {
		var dateLength = $("#calStartDate").val().length;

		if(dateLength==0){
			alert("Please enter Start Date");
			 event.preventDefault();
		}

		var dateLength = $("#calEndDate").val().length;

		if(dateLength==0){
			alert("Please enter End Date");
			event.preventDefault();
			return false;
		}

		var startChkDate = new Date($('#calStartDate').val());
		var endChkDate = new Date($('#calEndDate').val());

		if (endChkDate < startChkDate){
			alert(" End Date should be after the Start Date ");
			event.preventDefault();
			return false;
		}
			
		if (startChkDate.getHours() > endChkDate.getHours()) {
			alert('End Time should be after the Start Time');
			event.preventDefault();
			return false;
		}
		
		if (toSecondsAfterMidnight(endChkDate) <= toSecondsAfterMidnight(startChkDate)) {
			alert('The start and end times for this event are the same.  Please update or delete the event.');
			event.preventDefault();
			return false;
		}
		
		//send updated data...
		var duplicateIds;
		
		if ($('#isPlayList').val()) {
			// check if background playlist
			if (isBgPlaylist($('#eventtitle').text())) {
				duplicateIds = getConflictingEvents($('#eventid').text(), $('#screenSectionId').val(), startChkDate, endChkDate, true);
			} else {
				duplicateIds = getConflictingEvents($('#eventid').text(), $('#screenSectionId').val(), startChkDate, endChkDate, false);
			}
		} else {
			duplicateIds = getConflictingEvents($('#eventid').text(), $('#screenSectionId').val(), startChkDate, endChkDate, false);
		}

		if (duplicateIds) {
			if (confirm("The selected times conflict with one or more events in that date range.\n\nClick Ok, if you wish to save this event and overwrite the others.\nOr, click Cancel to change the time range on this event.")) {
				$.ajax({
					url : 'overWriteAndAddScrnLyoutEvents',
					data : {
						eventIdsToRemove: duplicateIds,
						id : $('#eventid').text(),
						yearlyrepet : $('#yearlyrepet:checked').val(),
						weekdayFile : $('#weekdayFile:checked').val(),
						weekendFile : $('#weekendFile:checked').val(),
						dailyRepeatFile : $('#dailyRepeatFile:checked').val(),
						monthlyRepeatFile : $('#monthlyRepeatFile:checked').val(),
						xlyRepeatFile : $('#xlyRepeatFile:checked').val(),
						repetdayes : $('#repetdayes').val(),
						playlistid:$('#playlistid').val(),
						calStartDate:$('#calStartDate').val(),
						calStartDateVal:$('#calStartDate').val(),
						calEndDate:$('#calEndDate').val(),
						calEndDateVal:$('#calEndDate').val(),
						calId:$('#calendarId').val(),
						repeatType:$('input:radio[name=repeattype]:checked').val(),
						isPlayList:$('#isPlayList').val(),
						isScreenLayout:$('#isScreenLayout').val(),
						screenlayoutmasterId:$('#screenlayoutmasterId').val(),
						isRssFeed:$('#isRssFeed').val(),
						isWeather:$('#isWeather').val()
					},
					success : function(doc) {
						if ($.trim(doc) == '') {
							$('#preventClose').val(0);
							$('#lastEventTime').val($('#calEndDate').val());
							$("#msg").css({
								top: 250
							}).show();
							$('#msg').html("Event Updated..");
							$('#msg').removeClass("msgattention");
							$('#msg').addClass("msgok");
							
							closeDetailsWindow();
						} else {
							$('#msg2').css({
								top : 250
							}).show();
							$('#msg2').html("Error updating event.");
							$('#msg2').removeClass("msgok");
							$('#msg2').addClass("msgattention");
						}
					}
				});
			} else {
				$('#preventClose').val(1);
				$('#msg2').css({
					top : 250
				}).show();
				$('#msg2').html("Event Not Updated.  Update  time range and try again.");
				$('#msg2').removeClass("msgok");
				$('#msg2').addClass("msgattention");
			}
		} else {
			$.ajax({
				url : 'screenlayoutUpdateOccurance',
				data : {
					id : $('#eventid').text(),
					yearlyrepet : $('#yearlyrepet:checked').val(),
					weekdayFile : $('#weekdayFile:checked').val(),
					weekendFile : $('#weekendFile:checked').val(),
					dailyRepeatFile : $('#dailyRepeatFile:checked').val(),
					monthlyRepeatFile : $('#monthlyRepeatFile:checked').val(),
					xlyRepeatFile : $('#xlyRepeatFile:checked').val(),
					repetdayes : $('#repetdayes').val(),
					playlistid:$('#playlistid').val(),
					calStartDate:$('#calStartDate').val(),
					calStartDateVal:$('#calStartDate').val(),
					calEndDate:$('#calEndDate').val(),
					calEndDateVal:$('#calEndDate').val(),
					calId:$('#calendarId').val(),
					repeatType:$('input:radio[name=repeattype]:checked').val(),
					isPlayList:$('#isPlayList').val(),
					isScreenLayout:$('#isScreenLayout').val(),
					screenlayoutmasterId:$('#screenlayoutmasterId').val(),
					isRssFeed:$('#isRssFeed').val(),
					isWeather:$('#isWeather').val()
				},
				success : function(doc) {
					if ($.trim(doc) == '') {
						$('#preventClose').val(0);
						$('#lastEventTime').val($('#calEndDate').val());
						$("#msg").css({
							top: 250
						}).show();
						$('#msg').html("Event Updated..");
						$('#msg').removeClass("msgattention");
						$('#msg').addClass("msgok");
						
						closeDetailsWindow();
					} else {
						$('#msg2').css({
							top : 250
						}).show();
						$('#msg2').html("Error updating event.");
						$('#msg2').removeClass("msgok");
						$('#msg2').addClass("msgattention");
					}
				}
			}); 
		}
	});

	// delete from form
	$("#delete").click(function (a) {
		// prevent default click action
		a.preventDefault();

		$('#msg2').html('');
		$('#msg2').removeClass("msgok");
		$('#msg2').removeClass("msgattention");

		if (!confirm("Delete?")) return;

		$.ajax({
			url: 'deleteScreenLayoutFileMappingEntry',
			data: {
			id: $("#eventid").text()
			},
			success: function (a) {
				$("#msg").css({
					top: 250
				}).show();
				$("#msg").html("Event deleted");
				$("#msg").removeClass("msgattention");
				$("#msg").addClass("msgok");
				
				refetchEvents($("#screenLayoutId").val(), $("#screenTypeId").val());
			}
		});

		// close pop-up
		$("#mask, .window").hide();
	});
	
	
	// multi-delete
	$('#multiDeleteDiv a').click(function(event) {
		event.preventDefault();
		
		// get array of checked events
		var eIds = new Array();
		
		$('[name="chkEventDelete"]:checked').each(function(index) {
			eIds.push($(this).val());
		});

		// ask for confirmation
		if (eIds.length > 0 && confirm('Are you sure you wish to delete the selected events?')) {
			$.ajax({
				url: "deleteScrnLayoutCheckedEvents",
				data: {
					eventIdsToRemove: eIds
				},
				success: function(a) {
					$("#msg").css({
						top: 250
					}).show();
					
					$("#msg").html(eIds.length+" events deleted");
					$("#msg").removeClass("msgattention");
					$("#msg").addClass("msgok");

					refetchEvents($("#screenLayoutId").val(), $("#screenTypeId").val());
				}
			});
		}
	});
};

function openScreenLayout(type) {
	resetScreenLayout();
	
	// set dialog heading
	$('#dScreenLayout h3').html('New Screen Layout of Type '+type);
	
	// set hidden fields
	$('#dScreenLayout #screenLayoutTypeId').val(type);
}

function resetScreenLayout() {
	// clear fields
	$('#dScreenLayout #screenLayoutTypeId').val('');
	$('#dScreenLayout #screenLayoutTitle').val('');
	$('#dScreenLayout #screenLayoutDescrpn').val('');

	// clear messages
	$('#dScreenLayout #msg1').html('');
	$('#msg1').removeClass("msgok");
	$('#msg1').removeClass("msgattention");
	$('#msg1').hide();
}

function saveScreenLayout() {	
	$.ajax({url: "saveNewScreenLayoutMaster",
		data : {
			screenLayoutTypeId: $('#dScreenLayout #screenLayoutTypeId').val(),
			screenLayoutTitle: $('#dScreenLayout #screenLayoutTitle').val(),
			screenLayoutDescrpn: $('#dScreenLayout #screenLayoutDescrpn').val()
		},
		success: function (a) {
			$("#msg1").html("Screen layout created");
			$("#msg1").removeClass("msgattention");
			$("#msg1").addClass("msgok");
			$("#msg1").show();
			
			loadScreenLayouts();
			refetchEvents(parseInt(a, 10), $('#dScreenLayout #screenLayoutTypeId').val());
		}
	});
}

function closeDialog() {
	$('#dScreenLayout').dialog('close');
}

function loadTips() {
	 $(".tip").tipTip({
		maxWidth: "250px", 
		edgeOffset: 10, 
		delay:100, 
		fadeIn: 300, 
		defaultPosition: "right"
	});
	 
	 $(".dtip").tipTip({
			maxWidth: "250px", 
			edgeOffset: 20, 
			delay:100, 
			fadeIn: 300, 
			defaultPosition: "top"
		});
}

function closeDetailsWindow() {
	if (toSecondsAfterMidnight(new Date($('#calStartDate').val())) == toSecondsAfterMidnight(new Date($('#calEndDate').val()))) {
		alert('The start and end times for this event are the same.  Please update or delete the event.');
	} else if ($('#preventClose').val() == 1) {
		alert('Please update the start/end time of this event so they do not conflict with other events, or delete this event.');
	} else {
		$('#msg2').html('');
		$('#msg2').removeClass("msgok");
		$('#msg2').removeClass("msgattention");
		
		$("#mask, #detailsWindow .window").hide();
		
		refetchEvents($("#screenLayoutId").val(), $("#screenTypeId").val());
	}
}

function loadScreenLayouts() {	
	$("#screenlist").html('');
	
	$.getJSON("getScreenLayoutsOfUser", {
		tags : "tags"
	}, function (a) {
		var b = [""];
		var sTitle;
		filesdata = a;

		$.each(a.files, function (a, items) {
			sTitle = items.screenLayoutTitle+"<br/><p>Type: "+items.screenLayoutTypeId+"<br/>Description: "+items.screenLayoutDescription+"</p>";
			
			b.push('<div class="screen ui-draggable">');
			b.push('<a href="javascript:void(0);" class="tip" title="'+sTitle+'">');
			b.push('<div class="e_id" style="display:none;">'+items.screenLayoutId+'</div>');
			b.push('<div class="isScreenLayout" style="display:none;">1</div>');
			b.push('<div class="e_type" style="display:none;">'+items.screenLayoutTypeId+'</div>');
			b.push('<div class="title">'+items.screenLayoutTitle+'</div>');
			b.push('<a href="javascript:void(0);" class="dtip" title="Delete this screen layout:<br />'+items.screenLayoutTitle+'" onclick="deleteScreenLayout('+items.screenLayoutId+')"><img width="20" style="position:absolute;right:-6px;bottom:0px;" src="images/delete3.png" /></a>');
			b.push('</a></div>');
		});

		$("#screenlist").append(b.join(""));
		$("#screenlist").css('overflow','auto');
		
		loadTips();
		
		$("#screenlist div.screen").each(function () {
			// add click function
            $(this).click(function(e) {
				var $target = $(e.target);
		
				if (!($target.is('a') || $target.is('img'))) {
					var slType = $(this).find('.e_type').text();
					var slId = $(this).find('.e_id').text();
					
					refetchEvents(slId, slType);
				}
			});	
		});
	});
}

function refetchEvents(id, type) {
	clearLayout();
	
	$.getJSON('getScreenLayoutMappingsOfScreenLayoutJSON', {
		screenLayoutId : id
	}, function(a) {
		clearEventArray(1);
		clearEventArray(2);
		
		// build screen layout
		buildScreenLayout(id, type);
		
		// add items to respective area
		$.each(a.files, function (a, screenLayout) {
			addScreenLayoutToSection(screenLayout.screenLayoutSectionId, screenLayout);
		});
		
		loadTips();
		
		renderFreeSlots(1);
		renderFreeSlots(2);
		
		renderEventArray(1);
		renderEventArray(2);
	});
}

function renderEventArray(sectionId) {
	var section = $('.slSection'+sectionId);
	var arr, e;

	if (sectionId == 1) {
		arr = section1Events;
	} else if (sectionId == 2) {
		arr = section2Events;
	}

	for (var i = 0; i < arr.length; i++) {
		e = $('#'+arr[i]).detach();
		section.append(e);
	}
}

function addToEventArray(section, e) {
	var i, eDate, added = false;
	
	if (section == 1) {
		for (i = 0; i < section1Events.length; i++) {
			eDate = $('#'+section1Events[i]).data('start');

			if ($('#'+e).data('start') < eDate) {
				section1Events.splice(i, 0, e);
				added = true;
				break;
			}
		}
		
		if (!added) {
			section1Events.push(e);
		}
	} else if (section == 2) {
		for (i = 0; i < section2Events.length; i++) {
			eDate = $('#'+section2Events[i]).data('start');
			
			if ($('#'+e).data('start') < eDate) {
				section2Events.splice(i, 0, e);
				added = true;
				break;
			}
		}
		
		if (!added) {
			section2Events.push(e);
		}
	}
}

function clearEventArray(section) {
	if (section == 1) {
		section1Events = new Array();
	} else if (section == 2) {
		section2Events = new Array();
	}
}

// removes events from the screen layout builder
function clearLayout() {
	$('#slSection0').html('');
	$('.slSection1').html('');
	$('.slSection2').html('');
}

function buildScreenLayout(id, type) {
	var b = [""];
	
	if (type == 1) {
		b.push('<div id="sl1Main" class="slSection1"></div>');
		b.push('<div id="sl1Side" class="slSection2"></div>');
	} else if (type == 2) {
		b.push('<div id="sl2Main" class="slSection1"></div>');
		b.push('<div id="sl2Bottom" class="slSection2"></div>');
	} else {
		b.push('<strong>- Select a screen layout below to view -</strong>');
	}
	
	$('#screenLayoutBase').html(b.join(""));
	
	$('.slSection1').data('sectionId', 1);
	$('.slSection1').data('screenLayoutId', id);
	$('.slSection2').data('sectionId', 2);
	$('.slSection2').data('screenLayoutId', id);
	
	setHiddenFields(id, type);
	
	// add drop handlers
	$('.slSection1, .slSection2').droppable({
		accept: '.ui-draggable',
		drop: function (event, ui) {
			// get values of object
			var data, b = ui.draggable, start, end;
			
			var fid, pid, iid;
			fid = b.find("#fileid").html();
			pid = b.find("#playlistid").html();
			iid = b.find("#imgid").html();
			
			start = ($('#lastEventTime').val() != '') ? toTimestamp(new Date($('#lastEventTime').val())) : toTimestamp(new Date());
			end = start;
			
			data = {
				'screenLayoutId': $(this).data('screenLayoutId'),
				'screenSectionId': $(this).data('sectionId'),
				'start': start,
				'end': end,
				'repeatType': 'dailyRepeatFile',
				'recurFile': '',
				'recurNumberOfDays': '',
				'title': '',
				'url': '',
				'fileId': '',
				'isPlayList': '',
				'isScreenLayout': '',
				'screenlayoutmasterId': '',
				'playlistid':'',
				'isWeather':'',
				'isRssFeed':''
			};

			// files
			if (fid) {
				data.fileId = fid;
				data.title = b.find(".tip").html();
				data.url = b.find(".e_url").html();
			} // playlist
			else if (pid) {		
				data.playlistid = pid;
				data.title = b.find(".title").html();
				data.url = b.find(".e_url").html();
				data.isPlayList = 1;
			} // weather/rss
			else if (iid) {
				data.title = b.find("#title").html();
				data.url = b.find(".e_url").html();
				data.isRssFeed = b.find("#isRssFeed").html();
				data.isWeather = b.find("#isWeatherFeed").html();
			}

			// save event
			$.get('screenlayoutaddOccurance', data, function(response) {
				// set form values
				$('#screenLayoutId').val(data.screenLayoutId);
				$('#screenSectionId').val(data.screenSectionId);
				$('#calStartDateVal').val(data.start);
				$('#calEndDateVal').val(data.end);
				$('#isWeather').val(data.isWeather);
				$('#isRssFeed').val(data.isRssFeed);
				$('#isPlayList').val(data.isPlayList);
				$('#isScreenLayout').val(data.isScreenLayout);
				$('#fileId').val(data.fileId);
				$('#playlistid').val(data.playlistid);
				$('#screenlayoutmasterId').val(data.screenlayoutmasterId);
				$('#repetdayes').val(data.recurNumberOfDays);
				$('#xlyRepeatFile').val(data.recurFile);
				$('input:radio[name=repeattype]').val([data.repeatType]);
				
				$('#eventtitle').html(data.title);
				$('#eventplaylist').html(data.playlistid);
				$('#eventid').html(response);
				latestEventId = response;
				
				if (data.url != '') {
					$('#eventimg').attr('src', data.url);
				}
				
				var dateStart = new Date(data.start*1000);
				var dateEnd = new Date(data.end*1000);
				
				var dsf = (1+dateStart.getMonth() < 10 ? '0'+(1+dateStart.getMonth()): 1+dateStart.getMonth())+'/'+(dateStart.getDate() < 10 ? '0'+dateStart.getDate(): dateStart.getDate())+'/'+dateStart.getFullYear()+' '+(dateStart.getHours() < 10 ? '0'+(dateStart.getHours()): dateStart.getHours())+':'+(dateStart.getMinutes() < 10 ? '0'+dateStart.getMinutes(): dateStart.getMinutes())+':'+(dateStart.getSeconds() < 10 ? '0'+dateStart.getSeconds(): dateStart.getSeconds());
				var def = (1+dateEnd.getMonth() < 10 ? '0'+(1+dateEnd.getMonth()): 1+dateEnd.getMonth())+'/'+(dateEnd.getDate() < 10 ? '0'+dateEnd.getDate(): dateEnd.getDate())+'/'+dateEnd.getFullYear()+' '+(dateEnd.getHours() < 10 ? '0'+(dateEnd.getHours()): dateEnd.getHours())+':'+(dateEnd.getMinutes() < 10 ? '0'+dateEnd.getMinutes(): dateEnd.getMinutes())+':'+(dateEnd.getSeconds() < 10 ? '0'+dateEnd.getSeconds(): dateEnd.getSeconds());

				$('#calStartDate').val(dsf);
				$('#calEndDate').val(def);
				
				displayForm();
			});
		}
	});
}

function addScreenLayoutToSection(sectionId, sl) {
	var section = $('.slSection'+sectionId);
	var id, title, classes = new Array(), styleCSS, dS, dE, timeStart, timeEnd, dateStart, dateEnd;
	var html = '';
	
	if (sl.screenLayoutMappingEndDate) {
		dS = new Date(sl.screenLayoutMappingStartDate);
		dE = new Date(sl.screenLayoutMappingEndDate);
	} else {
		dS = new Date(sl.screenLayoutMappingStartDate);
		dE = dS;
	}
		
	dateStart = dS.getFullYear()+'/'+(1+dS.getMonth() < 10 ? '0'+(1+dS.getMonth()): 1+dS.getMonth())+'/'+(dS.getDate() < 10 ? '0'+dS.getDate(): dS.getDate());
	dateEnd = dE.getFullYear()+'/'+(1+dE.getMonth() < 10 ? '0'+(1+dE.getMonth()): 1+dE.getMonth())+'/'+(dE.getDate() < 10 ? '0'+dE.getDate(): dE.getDate());
	timeStart = (dS.getHours() < 10 ? '0'+(dS.getHours()): dS.getHours())+':'+(dS.getMinutes() < 10 ? '0'+dS.getMinutes(): dS.getMinutes())+':'+(dS.getSeconds() < 10 ? '0'+dS.getSeconds(): dS.getSeconds());
	timeEnd = (dE.getHours() < 10 ? '0'+(dE.getHours()): dE.getHours())+':'+(dE.getMinutes() < 10 ? '0'+dE.getMinutes(): dE.getMinutes())+':'+(dE.getSeconds() < 10 ? '0'+dE.getSeconds(): dE.getSeconds());
	
	if (sectionId == 2 && $('#screenTypeId').val() == 1) {
		styleCSS= 'width:94%;text-align:left;margin:2px 0px;';
	} else {
		styleCSS = 'margin:2px 0px;';
	}
	
	classes.push('external-event');
	classes.push('screen-layout-event-s'+sectionId);
	classes.push('tip');
	
	if (sl.screenLayoutMappingId == 'OTS') {
		classes.push('free-slot');
	}
	
	if (sl['screenLayoutMappingPlayListId()'] > 0) {
		classes.push('fg-playlist');
	} else if (sl['isScreenLayout'] > 0) {
		classes.push('screen-layout');
	}
	
	// tooltip text
	title = sl.screenLayoutMappingTitle +"<br/><p>Event ID: "+sl.screenLayoutMappingId+"<br />Start Time: "+timeStart+"<br/>End Time: "+timeEnd;
	
	if (sl.screenLayoutMappingId == 'OTS') {
		id = sectionId+'-'+sl.screenLayoutMappingId+sl.idOffset;
	} else {
		id = sectionId+'-'+sl.screenLayoutMappingId;
	}
	
	html += '<div id="'+id+'" title="'+htmlEscape(title)+'" class="'+classes.join(' ')+'" style="'+styleCSS+'">';
	
	if (sectionId == 2 && $('#screenTypeId').val() == 1) {
		html += '<div>';
		
		// display title
		if (sl.screenLayoutMappingId == 'OTS') {
			html += '<div class="fc-event-title"><input type="checkbox" disabled="disabled" value="'+sl.screenLayoutMappingId+'" name="chkEventDelete" /> ' + htmlEscape(sl.screenLayoutMappingTitle) + '</div>';
		} else {
			html += '<div class="fc-event-title"><input type="checkbox" value="'+sl.screenLayoutMappingId+'" name="chkEventDelete" /> ' + htmlEscape(sl.screenLayoutMappingTitle) + ' (Event Id: '+sl.screenLayoutMappingId+')</div>';
		}
		
		// display date
		html += '<div class="fc-event-date">'+ dateStart + " to "+dateEnd + '</div>';
		
		// display time
		html += '<div class="fc-event-time">'+timeStart+' - '+timeEnd+'</div>';
		
		html += '</div>';
	} else {
		html += '<div>';
		
		// display time
		if (sl.screenLayoutMappingId == 'OTS') {
			html += '<div style="float:left;width:4%;position:relative;top:-3px"><input type="checkbox" disabled="disabled" value="'+sl.screenLayoutMappingId+'" name="chkEventDelete" /></div>';
		} else {
			html += '<div style="float:left;width:4%;position:relative;top:-3px"><input type="checkbox" value="'+sl.screenLayoutMappingId+'" name="chkEventDelete" /></div>';
		}
		
		html += '<div class="fc-event-time" style="float:left;width:20%;">'+timeStart+' - '+timeEnd+'</div>';
		
		// display date
		html += '<div class="fc-event-date" style="float:right;text-align:right;width:25%;">'+ dateStart + " to "+dateEnd + '</div>';
		
		// display title
		html += '<div class="fc-event-title">' + htmlEscape(sl.screenLayoutMappingTitle) + ((sl.screenLayoutMappingId == 'OTS') ? '</div>': ' (Event Id: '+sl.screenLayoutMappingId+')</div>');
		
		html += '</div>';
	}
	
	html += '</div>';
	
	//section.append(html);
	$('#section0').append(html);
	
	// bind data to event object
	$('#'+id).data('screenLayoutId', $("#screenLayoutId").val());
	$('#'+id).data('screenSectionId', sectionId);
	$('#'+id).data('id', sl['screenLayoutMappingId']);
	$('#'+id).data('title', sl['screenLayoutMappingTitle']);
	$('#'+id).data('url', sl['screenLayoutMappingUrl']);
	$('#'+id).data('start', sl['screenLayoutMappingStartDate']);
	$('#'+id).data('end', sl['screenLayoutMappingEndDate']);
	if (sl['screenLayoutMappingPlayListId()'] > 0) {
		$('#'+id).data('isPlaylist', 1);
	} else {
		$('#'+id).data('isPlaylist', 0);
	}
	$('#'+id).data('playlistid', sl['screenLayoutMappingPlayListId()']);
	$('#'+id).data('screenlayoutmasterid', '');
	$('#'+id).data('isScreenLayout', '');
	$('#'+id).data('fileid', '');
	$('#'+id).data('isWeather', '');
	$('#'+id).data('isRssFeed', '');
	
	if (sl['screenLayoutMappingYearlyRepeatFile()']) {
		$('#'+id).data('repeattype', 'yearlyRepeatFile');
	} else if (sl['screenLayoutMappingMonthlyRepeatFile']) {
		$('#'+id).data('repeattype', 'monthlyRepeatFile');
	} else if (sl['screenLayoutMappingWeekdayFile()']) {
		$('#'+id).data('repeattype', 'weekdayFile');
	} else if (sl['screenLayoutMappingWeekendFile()']) {
		$('#'+id).data('repeattype', 'weekendFile');
	} else {
		$('#'+id).data('repeattype', 'dailyRepeatFile');
	}
	
	$('#'+id).click(function (event) {
		if ($(this).data('id') == 'OTS') {
			return false;
		}
		
		var $target = $(event.target);
		
		if (!$target.is('input')) {
			event.preventDefault();

			// set form values
			$('#screenLayoutId').val($(this).data('screenLayoutId'));
			$('#screenSectionId').val($(this).data('screenSectionId'));
			$('#calStartDateVal').val($(this).data('start'));
			$('#calEndDateVal').val($(this).data('end'));
			$('#isWeather').val($(this).data('isWeather'));
			$('#isRssFeed').val($(this).data('isRssFeed'));
			$('#isPlayList').val($(this).data('isPlaylist'));
			$('#isScreenLayout').val($(this).data('isScreenLayout'));
			$('#fileId').val($(this).data('fileId'));
			$('#playlistid').val($(this).data('playlistid'));
			$('#screenlayoutmasterId').val($(this).data('screenlayoutmasterId'));
			
			$('input:radio[name=repeattype]').val([$(this).data('repeattype')]);
			
			$('#eventtitle').html($(this).data('title'));
			$('#eventplaylist').html('');
			$('#eventid').html($(this).data('id'));
			$('#eventimg').attr('src', $(this).data('url'));
						
			var dateStart = new Date($(this).data('start'));
			var dateEnd = new Date($(this).data('end'));

			var dsf = (1+dateStart.getMonth() < 10 ? '0'+(1+dateStart.getMonth()): 1+dateStart.getMonth())+'/'+(dateStart.getDate() < 10 ? '0'+dateStart.getDate(): dateStart.getDate())+'/'+dateStart.getFullYear()+' '+(dateStart.getHours() < 10 ? '0'+(dateStart.getHours()): dateStart.getHours())+':'+(dateStart.getMinutes() < 10 ? '0'+dateStart.getMinutes(): dateStart.getMinutes())+':'+(dateStart.getSeconds() < 10 ? '0'+dateStart.getSeconds(): dateStart.getSeconds());
			var def = (1+dateEnd.getMonth() < 10 ? '0'+(1+dateEnd.getMonth()): 1+dateEnd.getMonth())+'/'+(dateEnd.getDate() < 10 ? '0'+dateEnd.getDate(): dateEnd.getDate())+'/'+dateEnd.getFullYear()+' '+(dateEnd.getHours() < 10 ? '0'+(dateEnd.getHours()): dateEnd.getHours())+':'+(dateEnd.getMinutes() < 10 ? '0'+dateEnd.getMinutes(): dateEnd.getMinutes())+':'+(dateEnd.getSeconds() < 10 ? '0'+dateEnd.getSeconds(): dateEnd.getSeconds());

			$('#calStartDate').val(dsf);
			$('#calEndDate').val(def);
			
			displayForm();
		}
    });
	
	addToEventArray(sectionId, id);
}

function displayForm() {
	$("#delete, #btn-close").css('display','block');
	$("#detailsWindow #dialog").css('width','425px');
	var d = $("#dialog");
	var e = 100;
	var f = screen.availWidth / 2 - d.width() / 2;

	$("#detailsWindow .window").css({left: f,top: e }).show().fadeIn();

	window.scrollTo(0,0);
	var g = $(document).height();
	var h = $(window).width();

	$("#mask").css({
	width: h,
	height: g
	});

	$("#mask").fadeIn(1e3);
	$("#mask").fadeTo("slow", .8);
}

function deleteScreenLayout(id) {
	if (!confirm('Your calendar entries may also be deleted for this screen layout. You may have to update the calendar with new entries/events.\n\nAre you sure you wish to delete this screen layout?')) {
		return false;
	}
	
	$.ajax({url: "deleteScreenLayoutMasterEntry",
		data : {
			'screenLayoutId' : id
		},
		success: function (a) {
			$("#msg").html("Screen layout removed");
			$("#msg").removeClass("msgattention");
			$("#msg").addClass("msgok");
			$("#msg").show();
			
			loadScreenLayouts();
			clearLayout();
			$('#screenLayoutBase').html('<div style="text-align:center;"><strong>- Select a screen layout below to view -</strong></div>');
		}
	});
}

function htmlEscape(s) {
	if(s){
		return s.replace(/&/g, '&amp;')
		.replace(/</g, '&lt;')
		.replace(/>/g, '&gt;')
		.replace(/'/g, '&#039;')
		.replace(/"/g, '&quot;')
		.replace(/\n/g, '<br />');
	} else {
		return "";	
	}
}

function toTimestamp(strDate){
 var datum = Date.parse(strDate);
 return datum/1000;
}

function getConflictingEvents(eId, sectionId, start, end, isBg) {
	var dupIds = new Array();
	var startSec = toSecondsAfterMidnight(start);
	var endSec = toSecondsAfterMidnight(end);
	var sDate, eDate, sSec, eSec;
	var checkDate = true;
	
	$('.screen-layout-event-s'+sectionId).each(function(i, sl) {
		// don't compare to self
		if (eId != $(sl).data('id')) {
			// if the event we are updating is a background playlist, only check against other background playlists
			if (isBg) {
				if (isBgPlaylist($(sl).data('title'))) {
					checkDate = true;
				} else {
					checkDate = false;
				}
			} // else, if the event being checked against is a playlist, make sure it is not in the background
			else if ($(sl).data('isPlaylist') == 1) {
				if (isBgPlaylist($(sl).data('title'))) {
					checkDate = false;
				} else {
					checkDate = true;
				}
			} // don't check open time slots
			else if ($(sl).data('id') == 'OTS') {
				checkDate = false;
			} // else, check the date by default
			else {
				checkDate = true;
			}

			if (checkDate) {
				sDate = new Date($(sl).data('start'));
				eDate = ($(sl).data('end')) ? new Date($(sl).data('end')) : sDate;

				// make sure the two events share some dates
				if ((start <= eDate) && (end >= sDate)) {
					sSec = toSecondsAfterMidnight(sDate);
					eSec = toSecondsAfterMidnight(eDate);

					// compare times
					if ((startSec < eSec) && (endSec > sSec) || (startSec == sSec && endSec == eSec)) {
						dupIds.push($(sl).data('id'));
					}
				}
			}
		}
	});

	return (dupIds && dupIds.length > 0) ? dupIds : false;
}

function setHiddenFields(id, type) {
	$('#screenLayoutId').val(id);
	$('#screenTypeId').val(type);
}

function toSecondsAfterMidnight(dt) {
	var seconds = dt.getSeconds();
	var minutes = dt.getMinutes();
	var hours = dt.getHours();
	var ret = 0;
	
	ret += seconds;
	ret += minutes*60;
	ret += hours*3600;
	
	return ret;
}

function isBgPlaylist(pl) {
	var ret;

	$("#playlist-content div.external-event").each(function () {
		if (pl == $.trim($(this).find(".title").text())) {
			ret = ($.trim($(this).find("#playbackground").text()) == 1) ? true : false;
		}
	});

	return ret;
}

function renderFreeSlots(section) {
	var slotStart, slotEnd, evStart, evEnd, evEndP, arr, event, eventArr = new Array(), h = 0;
	var spec = 5;
	
	if (section == 1) {
		arr = section1Events;
	} else if (section == 2) {
		arr = section2Events;
	}
	
	$.each(arr, function(i, eId) {
		event = $('#'+eId);
		
		evStart = $(event).data('start');
		evEnd = $(event).data('end');
		if (evEnd > evEndP || evEndP == undefined) {
			evEndP = evEnd;
		}
		
		if (slotStart == undefined) {
			slotStart = evStart;
		}

		if (new Date(evStart) >= new Date(new Date(slotStart).setMinutes(new Date(slotStart).getMinutes()+spec))) {
			slotEnd = evStart;
			renderFreeSlot(section, slotStart, slotEnd, i);
			slotStart = evEndP;
		} else {
			slotStart = evEndP;
		}
		
		h = i;
	});
	
	for (var i = 0; i < eventArr.length; i++) {
		addScreenLayoutToSection(section, eventArr[i]);
	}

	function renderFreeSlot(section, start, end, i) {
		var today = new Date();
		today.setHours(0,0,0);
		
		var timestamp = Date.parse(today);

		var e = {
			'url': '',
			'screenLayoutMappingPlayListId()':'0',
			'screenLayoutMappingIsRecurFile()':'0',
			'screenLayoutMappingIsPlaylist()':'0',
			'screenLayoutId':$('#screenLayoutId').val(),
			'screenLayoutSectionId':section,
			'screenLayoutMappingDailyRepeatFile':'1',
			'screenLayoutMappingUrl':'',
			'screenLayoutMappingYearlyRepeatFile()':'0',
			'screenLayoutMappingTitle':'---Open/Free Time Slot---',
			'screenLayoutMappingDescription':'',
			'screenLayoutMappingWeekendFile()':'0',
			'screenLayoutMappingStartDate': formatDate(new Date(start)),
			'screenLayoutMappingEndDate': formatDate(new Date(end)),
			'screenLayoutTitle':'---Open/Free Time Slot---',
			'screenLayoutMappingId':'OTS',
			'screenLayoutMappingWeeklyRepeatFile()':'0',
			'screenLayoutMappingRecurNumberOfDays()':'0',
			'screenLayoutMappingWeekdayFile()':'0',
			'screenLayoutMappingMonthlyRepeatFile':'0',
			'idOffset':i
		};

		eventArr.push(e);
	}
}

function formatDate(dt) {
	var str;
	
	str = dt.getFullYear()+'-'+(dt.getMonth() < 9 ? '0'+(1+dt.getMonth()) : (1+dt.getMonth()))+'-'+(dt.getDate() < 10 ? '0'+dt.getDate() : dt.getDate())+'T'+(dt.getHours() < 10 ? '0'+dt.getHours() : dt.getHours())+':'+(dt.getMinutes() < 10 ? '0'+dt.getMinutes() : dt.getMinutes())+':'+(dt.getSeconds() < 10 ? '0'+dt.getSeconds() : dt.getSeconds());
	
	return str;
}