{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_services/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_services/token-storage.service.ts","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/board-admin/board-admin.component.ts","./src/app/board-admin/board-admin.component.html","./src/app/board-moderator/board-moderator.component.ts","./src/app/board-moderator/board-moderator.component.html","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl , FormControl}  from '@angular/forms';\r\nimport {RegisterUser} from \"./register.interface\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerUser = {} as RegisterUser;\r\n  registerForm : FormGroup;\r\n\r\n // reactiveForm: FormGroup;\r\n  form: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.registerForm = new FormGroup({\r\n      displayName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n      matchingPassword: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n    });\r\n    /*this.reactiveForm = this.formBuilder.group({\r\n      /!*firstName: [null, [Validators.required, Validators.minLength(2)]],\r\n      lastName: [null, Validators.required]*!/\r\n     /!* address: this.formBuilder.group({\r\n        addressType: [null, Validators.required],\r\n        expiryDate: [null, this.expiryDateValidator],\r\n        streetAddress: [null, Validators.required],\r\n        city: [null, Validators.required],\r\n        state: [null, Validators.required],\r\n        zipcode: [null, [Validators.required, Validators.pattern('^[0-9]{5}$')]]\r\n      })*!/\r\n      displayName: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\r\n      email: [null, [Validators.required,Validators.email]],\r\n      password: [null, [Validators.required,Validators.minLength(6)]],\r\n      matchingPassword: [null, [Validators.required,Validators.minLength(6)]\r\n      ]\r\n    });*/\r\n  }\r\n\r\n  get regnForm(){\r\n    return this.registerForm.controls;\r\n  }\r\n  onSubmit(): void {\r\n\r\n   // this.registerUser=this.registerForm.value;\r\n\r\n    this.registerUser = Object.assign(this.registerUser, this.registerForm.value);\r\n\r\n    console.log('registerForm', this.registerForm.value );\r\n    console.log('this.registerUser', this.registerUser );\r\n    this.authService.register(this.registerUser).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        if(err.status===500){\r\n          this.errorMessage= 'An unexpected error has occurred. Please try again';\r\n        }else{\r\n          this.errorMessage = err.error.message;\r\n        }\r\n\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <h1>Reactive Forms</h1>\r\n    <hr>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"col-md-12\">\r\n\t<div class=\"card card-container\">\r\n\t\t<img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\" />\r\n\t\t<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"displayName\">Display Name</label>\r\n        <input type=\"text\"\r\n               [ngClass]=\"{'form-control': true,\r\n                  'is-invalid': !regnForm.displayName.valid && regnForm.displayName.touched,\r\n                  'is-valid': regnForm.displayName.valid}\"\r\n               [formControlName]=\"'displayName'\" id=\"displayName\" placeholder=\"Enter display name\">\r\n        <small *ngIf=\"regnForm.displayName.errors?.required && regnForm.displayName.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Display name is required.</small>\r\n        <small *ngIf=\"regnForm.displayName.errors?.minlength && regnForm.displayName.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Display name should be atleast 2 characters.</small>\r\n      </div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label for=\"email\">Email</label> <input type=\"email\"  [ngClass]=\"{'form-control': true,\r\n                  'is-invalid': !regnForm.email.valid && regnForm.email.touched,\r\n                  'is-valid': regnForm.email.valid}\"\r\n                                                [formControlName]=\"'email'\" id=\"email\" placeholder=\"email\">\r\n        <small *ngIf=\"regnForm.email.errors?.required && regnForm.email.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Email is required.</small>\r\n        <small *ngIf=\"regnForm.email.errors?.email && regnForm.email.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Enter a valid email.</small>\r\n      </div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label for=\"password\">Password</label> <input type=\"password\" [ngClass]=\"{'form-control': true,\r\n                  'is-invalid': !regnForm.password.valid && regnForm.password.touched,\r\n                  'is-valid': regnForm.password.valid}\"\r\n                                                      [formControlName]=\"'password'\" id=\"password\" placeholder=\"password\">\r\n        <small *ngIf=\"regnForm.password.errors?.required && regnForm.password.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Password is required.</small>\r\n        <small *ngIf=\"regnForm.password.errors?.minlength && regnForm.password.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Password should be atleast 6 characters.</small>\r\n      </div>\r\n\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label for=\"matchingPassword\">Confirm Password</label> <input type=\"password\" [ngClass]=\"{'form-control': true,\r\n                  'is-invalid': !regnForm.matchingPassword.valid && regnForm.matchingPassword.touched,\r\n                  'is-valid': regnForm.matchingPassword.valid}\"\r\n                                                                      [formControlName]=\"'matchingPassword'\" id=\"matchingPassword\" placeholder=\"matchingPassword\">\r\n        <small *ngIf=\"regnForm.matchingPassword.errors?.required && regnForm.matchingPassword.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Matching password is required.</small>\r\n        <small *ngIf=\"regnForm.matchingPassword.errors?.minlength && regnForm.matchingPassword.touched\"  class=\"form-text invalid-feedback custom-invalid-feedback\">Matching password should be atleast 6 characters.</small>\r\n      </div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"isSignUpFailed\">\r\n\t\t\t\tSignup failed!<br />{{ errorMessage }}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t\t<div class=\"alert alert-success\" *ngIf=\"isSuccessful\">Your registration is successful!</div>\r\n\t</div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError, switchMap, take, filter } from 'rxjs/operators';\r\nimport { AppConstants } from '../common/app.constants';\r\nimport { environment } from '../../environments/environment';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { RefreshTokenPayload } from '../login/RefreshTokenPayload';\r\nimport { RefreshTokenPayloadIntfc } from '../login/RefreshTokenPayloadIntfc';\r\n\r\nimport { JwtAuthenticationResponse } from '../login/JwtAuthenticationResponse';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  refreshTokenPayload = {} as RefreshTokenPayload;\r\n  // refreshTokenPayload: RefreshTokenPayload;\r\n  refreshTokenPayloadIntfc: RefreshTokenPayloadIntfc;\r\n  private refreshTokenTimeout;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tokenStorageService: TokenStorageService\r\n  ) {\r\n    // this.refreshTokenPayload = this.tokenStorageService.getRefreshTokenPayload();\r\n  }\r\n\r\n  login(credentials): Observable<any> {\r\n    const isProd = environment.production;\r\n    return this.http.post(\r\n      environment.AUTH_API + 'signin',\r\n      {\r\n        email: credentials.username,\r\n        password: credentials.password,\r\n      },\r\n      httpOptions\r\n    ).pipe(\r\n      tap((response) => {\r\n        this.tokenStorageService.saveTokens(response);\r\n        this.startRefreshTokenTimer();\r\n      })\r\n    );\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post(\r\n      environment.AUTH_API + 'signup',\r\n      {\r\n        displayName: user.displayName,\r\n        email: user.email,\r\n        password: user.password,\r\n        matchingPassword: user.matchingPassword,\r\n        socialProvider: 'LOCAL',\r\n      },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  private startRefreshTokenTimer() {\r\n    // parse json object from base64 encoded jwt token\r\n    // const jwtToken = JSON.parse(atob(this.userValue.jwtToken.split('.')[1]));\r\n\r\n    const jwtTokenStr = this.tokenStorageService.getToken();\r\n    const jwtToken = JSON.parse(atob(jwtTokenStr.split('.')[1]));\r\n    // set a timeout to refresh the token a minute before it expires\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n\r\n     this.refreshTokenTimeout = setTimeout(() => {\r\n      this.refreshToken().subscribe();\r\n    }, timeout);\r\n  }\r\n\r\n  public refreshToken() {\r\n    var refreshTokenUrl = environment.AUTH_API + 'refresh/token';\r\n    this.refreshTokenPayload = this.tokenStorageService.getRefreshTokenPayload();\r\n    console.log('refreshTokenPayload', this.refreshTokenPayload);\r\n    return this.http.post<any>(refreshTokenUrl, this.refreshTokenPayload).pipe(\r\n      tap(\r\n        (jwtAuthenticationResponse: JwtAuthenticationResponse) => {\r\n          console.log(\r\n            'jwtAuthenticationResponse in refreshToken Auth Srvice ',\r\n            jwtAuthenticationResponse\r\n          );\r\n          this.tokenStorageService.saveTokens(jwtAuthenticationResponse);\r\n          this.startRefreshTokenTimer();\r\n        },\r\n\r\n        catchError((error) => {\r\n          console.log('Handling error locally and rethrowing it...', error);\r\n          return throwError(error);\r\n        })\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  content: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getPublicContent().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h6 class=\"text-muted py-5\">{{ content }}</h6>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  API_BASE_URL: 'http://localhost:8080/',\r\n\r\n  OAUTH2_URL: 'http://localhost:8080/oauth2/authorization/',\r\n\r\n  REDIRECT_URL: '?redirect_uri=http://localhost:8080/login/oauth2/code/google',\r\n\r\n  API_URL: 'http://localhost:8080/api/',\r\n  AUTH_API: 'http://localhost:8080/api/auth/',\r\n  GOOGLE_AUTH_URL:\r\n    'http://localhost:8080/oauth2/authorization/google?redirect_uri=http://localhost:8080/login/oauth2/code/google',\r\n  FACEBOOK_AUTH_URL:\r\n    'http://localhost:8080/oauth2/authorization/facebook?redirect_uri=http://localhost:8080/login/oauth2/code/google',\r\n\r\n  GITHUB_AUTH_URL:\r\n    'http://localhost:8080/oauth2/authorization/github?redirect_uri=http://localhost:8080/login/oauth2/code/github',\r\n\r\n  TWITTER_AUTH_URL:\r\n    'http://localhost:8080/oauth2/authorization/twitter?redirect_uri=http://localhost:8080/login/oauth2/code/twitter',\r\n\r\n  LINKEDIN_AUTH_URL:\r\n    'http://localhost:8080/oauth2/authorization/linkedin?redirect_uri=http://localhost:8080/login/oauth2/code/google',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { RefreshTokenPayload } from '../login/RefreshTokenPayload';\r\nimport { RefreshTokenPayloadIntfc } from '../login/RefreshTokenPayloadIntfc';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\nconst USER_ID = 'user_id';\r\nconst USER_EMAIL = 'user_email';\r\nconst REFRESH_TOKEN = 'refersh_token';\r\nconst TOKEN_EXPIRY_TIME = 'token_expiry_time';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TokenStorageService {\r\n  refreshTokenPayload = {} as RefreshTokenPayload;\r\n  refreshTokenPayloadIntfc = {} as RefreshTokenPayloadIntfc;\r\n  constructor() {}\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public saveTokens(data: any): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, data.accessToken);\r\n    window.sessionStorage.removeItem(REFRESH_TOKEN);\r\n    window.sessionStorage.setItem(REFRESH_TOKEN, data.refreshToken);\r\n    window.sessionStorage.removeItem(TOKEN_EXPIRY_TIME);\r\n    window.sessionStorage.setItem(TOKEN_EXPIRY_TIME, data.expiresAt);\r\n    this.saveUser(data.user);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.removeItem(USER_ID);\r\n    window.sessionStorage.setItem(USER_ID, user.id);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n    window.sessionStorage.removeItem(USER_EMAIL);\r\n    var userEmail = user.email;\r\n    window.sessionStorage.setItem(USER_EMAIL, userEmail);\r\n  }\r\n\r\n  public getUser(): any {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n\r\n  public getRefreshTokenPayload(): RefreshTokenPayload {\r\n    this.refreshTokenPayload.email = window.sessionStorage.getItem(USER_EMAIL);\r\n    this.refreshTokenPayload.userId = window.sessionStorage.getItem(USER_ID);\r\n    this.refreshTokenPayload.jwtToken = window.sessionStorage.getItem(\r\n      TOKEN_KEY\r\n    );\r\n    this.refreshTokenPayload.password = 'test';\r\n    this.refreshTokenPayload.refreshToken = window.sessionStorage.getItem(\r\n      REFRESH_TOKEN\r\n    );\r\n    return this.refreshTokenPayload;\r\n  }\r\n\r\n  public getRefreshTokenPayloadIntrfc(): RefreshTokenPayload {\r\n    this.refreshTokenPayload.email = window.sessionStorage.getItem(USER_EMAIL);\r\n    this.refreshTokenPayload.jwtToken = window.sessionStorage.getItem(\r\n      TOKEN_KEY\r\n    );\r\n    this.refreshTokenPayload.password = 'test';\r\n    this.refreshTokenPayload.refreshToken = window.sessionStorage.getItem(\r\n      REFRESH_TOKEN\r\n    );\r\n    return this.refreshTokenPayload;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent implements OnInit {\r\n\r\n  content: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h6 class=\"text-muted py-5\">{{ content }}</h6>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private roles: string[];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username: string;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n      if (user.displayName) {\r\n        this.username = user.displayName;\r\n      } else {\r\n        this.username = user.email;\r\n      }\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div id=\"app\">\r\n\t<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n\t\t<a class=\"navbar-brand p-0\" href=\"/\">\r\n\t\t\t<img src=\"/assets/img/logo.png\" width=\"200\" height=\"50\" alt=\"JavaChinna\">\r\n\t\t</a>\r\n\t\t<ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n\t\t\t<li class=\"nav-item\"><a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a></li>\r\n\t\t\t<li class=\"nav-item\" *ngIf=\"showAdminBoard\"><a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a></li>\r\n\t\t\t<li class=\"nav-item\" *ngIf=\"showModeratorBoard\"><a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a></li>\r\n\t\t\t<li class=\"nav-item\"><a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">User</a></li>\r\n\t\t</ul>\r\n\t\t<ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\r\n\t\t\t<li class=\"nav-item\"><a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a></li>\r\n\t\t\t<li class=\"nav-item\"><a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a></li>\r\n\t\t</ul>\r\n\t\t<ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\r\n\t\t\t<li class=\"nav-item\"><a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a></li>\r\n\t\t\t<li class=\"nav-item\"><a href class=\"nav-link\" (click)=\"logout()\">LogOut</a></li>\r\n\t\t</ul>\r\n\t</nav>\r\n\t<div class=\"container-fluid bg-light\">\r\n\t\t<router-outlet></router-outlet>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AppConstants } from '../common/app.constants';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(environment.API_URL + 'all', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(environment.API_URL + 'user', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(environment.API_URL + 'mod', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(environment.API_URL + 'admin', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  getCurrentUser(): Observable<any> {\r\n    return this.http.get(environment.API_URL + 'user/me', httpOptions);\r\n  }\r\n\r\n  upDateUserProfile(user): Observable<any> {\r\n    console.log(\r\n      ' environment.API_URL + user    ',\r\n      environment.API_URL + 'user'\r\n    );\r\n    console.log(JSON.stringify(user));\r\n    return this.http.post(environment.API_URL + 'user', user, httpOptions);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  editProfile: boolean = false;\r\n  currentUser: any;\r\n  userOj: any = {};\r\n  form: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private token: TokenStorageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.token.getUser();\r\n    console.log('this.currentUser', this.currentUser);\r\n    this.form = this.currentUser;\r\n  }\r\n\r\n  onEditProfile(): void {\r\n    this.editProfile = true;\r\n  }\r\n\r\n  onRefreshToken() {\r\n    this.authService.refreshToken().subscribe(\r\n      (refreshTknResponse) => {\r\n        console.log(refreshTknResponse);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      (err) => {\r\n        this.errorMessage = err.error.message;\r\n        console.log(\r\n          'refreshTknResponse error in prfl cmpnt :- ',\r\n          this.errorMessage\r\n        );\r\n        // this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n  onSubmit(): void {\r\n    // this.userOj = this.token.getUser();\r\n    this.userOj.providerUserId = this.form.email;\r\n    this.userOj.email = this.form.email;\r\n    this.userOj.password = this.form.password;\r\n    this.userOj.roles = this.currentUser.roles;\r\n    this.userOj.provider = null;\r\n    this.userOj.createdDate = null;\r\n    this.userOj.modifiedDate = null;\r\n    this.userOj.provider = null;\r\n    this.userOj.enabled = true;\r\n    this.userOj.id = this.currentUser.id;\r\n    this.userOj.displayName = null;\r\n\r\n    /*   private String email;\r\n    private boolean enabled;\r\n    private String displayName;\r\n    private String password; */\r\n\r\n    this.userService.upDateUserProfile(this.userOj).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      (err) => {\r\n        this.errorMessage = err.error.message;\r\n        console.log('user update profile error :- ', this.errorMessage);\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<!-- <div class=\"container\" *ngIf=\"currentUser; else loggedOut\"> -->\r\n<ng-template #profile_details>\r\n  <div class=\"container\">\r\n    <div>\r\n      <h6 class=\"text-muted py-5\">\r\n        <strong>{{ currentUser.displayName }}</strong> Profile\r\n      </h6>\r\n    </div>\r\n    <p><strong>Email:</strong> {{ currentUser.email }}</p>\r\n    <strong>Roles:</strong>\r\n    <ul>\r\n      <li *ngFor=\"let role of currentUser.roles\">{{ role }}</li>\r\n    </ul>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-info\"\r\n      (click)=\"onEditProfile()\"\r\n    >\r\n      Edit Profile\r\n    </button>\r\n\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-info\"\r\n      (click)=\"onRefreshToken()\"\r\n    >\r\n      Refresh Token\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- update profile form -->\r\n<div class=\"container\">\r\n  <div class=\"col-md-12\" *ngIf=\"editProfile; else profile_details\">\r\n    <div class=\"card card-container\">\r\n      <img\r\n        id=\"profile-img\"\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        class=\"profile-img-card\"\r\n      />\r\n      <form\r\n        *ngIf=\"!isSuccessful\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"displayName\">Display Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"displayName\"\r\n            [(ngModel)]=\"form.displayName\"\r\n            required\r\n            minlength=\"3\"\r\n            maxlength=\"20\"\r\n            #displayName=\"ngModel\"\r\n          />\r\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && displayName.invalid\">\r\n            <div *ngIf=\"displayName.errors.required\">\r\n              Display Name is required\r\n            </div>\r\n            <div *ngIf=\"displayName.errors.minlength\">\r\n              Display Name must be at least 3 characters\r\n            </div>\r\n            <div *ngIf=\"displayName.errors.maxlength\">\r\n              Display Name must be at most 20 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            name=\"email\"\r\n            [(ngModel)]=\"form.email\"\r\n            required\r\n            email\r\n            #email=\"ngModel\"\r\n          />\r\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\r\n            <div *ngIf=\"email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"email.errors.email\">\r\n              Email must be a valid email address\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            [(ngModel)]=\"form.password\"\r\n            required\r\n            minlength=\"6\"\r\n            #password=\"ngModel\"\r\n          />\r\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              Password must be at least 6 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"matchingPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"matchingPassword\"\r\n            [(ngModel)]=\"form.matchingPassword\"\r\n            required\r\n            minlength=\"6\"\r\n            #matchingPassword=\"ngModel\"\r\n          />\r\n          <div\r\n            class=\"alert-danger\"\r\n            *ngIf=\"f.submitted && matchingPassword.invalid\"\r\n          >\r\n            <div *ngIf=\"matchingPassword.errors.required\">\r\n              Confirm Password is required\r\n            </div>\r\n            <div *ngIf=\"matchingPassword.errors.minlength\">\r\n              Confirm Password must be at least 6 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n        </div>\r\n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n          Signup failed!<br />{{ errorMessage }}\r\n        </div>\r\n      </form>\r\n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n        Your registration is successful!\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\n\r\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    BoardAdminComponent,\r\n    BoardModeratorComponent,\r\n    BoardUserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [authInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './board-admin.component.html',\r\n  styleUrls: ['./board-admin.component.css']\r\n})\r\nexport class BoardAdminComponent implements OnInit {\r\n\r\n  content: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAdminBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h6 class=\"text-muted py-5\">{{ content }}</h6>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent implements OnInit {\r\n\r\n  content: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getModeratorBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h6 class=\"text-muted py-5\">{{ content }}</h6>\r\n</div>\r\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport {tap} from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\tconstructor(private token: TokenStorageService, private router: Router) {\r\n\r\n\t}\r\n\r\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\tlet authReq = req;\r\n\t\tconst loginPath = '/login';\r\n\t\tconst token = this.token.getToken();\r\n\t\tif (token != null) {\r\n\t\t\tauthReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n\t\t}\r\n\t\treturn next.handle(authReq).pipe( tap(() => {},\r\n\t\t(err: any) => {\r\n\t\t\tif (err instanceof HttpErrorResponse) {\r\n\t\t\t\tif (err.status !== 401 || window.location.pathname === loginPath) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.token.signOut();\r\n\t\t\t\twindow.location.href = loginPath;\r\n\t\t\t}\r\n\t\t}\r\n\t\t));\r\n\t}\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'profile', component: ProfileComponent },\r\n  { path: 'user', component: BoardUserComponent },\r\n  { path: 'mod', component: BoardModeratorComponent },\r\n  { path: 'admin', component: BoardAdminComponent },\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      relativeLinkResolution: 'legacy',\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppConstants } from '../common/app.constants';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: any = {};\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  currentUser: any;\r\n  googleURL = environment.GOOGLE_AUTH_URL;\r\n  facebookURL = environment.FACEBOOK_AUTH_URL;\r\n  githubURL = environment.GITHUB_AUTH_URL;\r\n  twitterURL = environment.TWITTER_AUTH_URL;\r\n  linkedinURL = environment.LINKEDIN_AUTH_URL;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    private route: ActivatedRoute,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const token: string = this.route.snapshot.queryParamMap.get('token');\r\n    const error: string = this.route.snapshot.queryParamMap.get('error');\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.currentUser = this.tokenStorage.getUser();\r\n    } else if (token) {\r\n      this.tokenStorage.saveToken(token);\r\n      this.userService.getCurrentUser().subscribe(\r\n        (data) => {\r\n          this.login(data);\r\n        },\r\n        (err) => {\r\n          this.errorMessage = err.error.message;\r\n          this.isLoginFailed = true;\r\n        }\r\n      );\r\n    } else if (error) {\r\n      this.errorMessage = error;\r\n      this.isLoginFailed = true;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.authService.login(this.form).subscribe(\r\n      (data) => {\r\n        // this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveTokens(data);\r\n        this.login(data.user);\r\n      },\r\n      (err) => {\r\n        this.errorMessage = err.error.message;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  login(user): void {\r\n    this.tokenStorage.saveUser(user);\r\n    this.isLoginFailed = false;\r\n    this.isLoggedIn = true;\r\n    this.currentUser = this.tokenStorage.getUser();\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"col-md-12\">\r\n\t<div class=\"card card-container\">\r\n\t\t<img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\" />\r\n\t\t<form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label for=\"username\">Email</label> <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" required #username=\"ngModel\" />\r\n\t\t\t\t<div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">Username is required!</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label for=\"password\">Password</label> <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\r\n\t\t\t\t\t#password=\"ngModel\" />\r\n\t\t\t\t<div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\">\r\n\t\t\t\t\t<div *ngIf=\"password.errors.required\">Password is required</div>\r\n\t\t\t\t\t<div *ngIf=\"password.errors.minlength\">Password must be at least 6 characters</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<button class=\"btn btn-primary btn-block\">Login</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"isLoginFailed\">Login failed: {{ errorMessage }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<p class=\"content-divider center mt-3\">\r\n\t\t\t\t\t<span>or</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p class=\"social-login text-center\">\r\n\t\t\t\t\tSign in with:\r\n\t\t\t\t\t<a href=\"{{ googleURL }}\" class=\"ml-2\">\r\n\t\t\t\t\t\t<img alt=\"Login with Google\" src=\"/assets/img/google.png\" class=\"btn-img\">\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href=\"{{ facebookURL }}\">\r\n\t\t\t\t\t\t<img alt=\"Login with Facebook\" src=\"/assets/img/facebook.png\" class=\"btn-img\">\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href=\"{{ githubURL }}\">\r\n\t\t\t\t\t\t<img alt=\"Login with Github\" src=\"/assets/img/github.png\" class=\"btn-img\">\r\n\t\t\t\t\t</a>\r\n          <a href=\"{{ twitterURL }}\">\r\n            <img alt=\"Login with Github\" src=\"/assets/img/twitter.png\" class=\"btn-img\">\r\n          </a>\r\n\t\t\t\t\t<a href=\"{{ linkedinURL }}\">\r\n\t\t\t\t\t\t<img alt=\"Login with Linkedin\" src=\"/assets/img/linkedin.png\" class=\"btn-img-linkedin\">\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t\t<div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">Welcome {{currentUser.displayName}} <br>Logged in as {{ currentUser.roles }}.</div>\r\n\t</div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}