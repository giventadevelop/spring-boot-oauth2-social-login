/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "org.springframework.boot" version "2.4.0"
    id 'io.freefair.lombok' version '5.1.0'
}
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

generateLombokConfig.enabled = false
//config.stopBubbling = true
//lombok.addLombokGeneratedAnnotation = true
//lombok.anyConstructor.addConstructorProperties = true

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'mysql:mysql-connector-java:8.0.22'
    implementation 'org.springframework.boot:spring-boot-devtools:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.4.0'
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    implementation 'org.projectlombok:lombok:1.18.16'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.4.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    //annotationProcessor "org.mapstruct:mapstruct-processor:1.4.1.Final"
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.0'

    compile 'org.junit.jupiter:junit-jupiter:5.7.1'
}

test {
    useJUnitPlatform()
}

group = 'com.javachinna'
version = '1.1.0'
description = 'boot-oauth2-social'
java.sourceCompatibility = JavaVersion.VERSION_1_8

compileJava {
    options.encoding = 'UTF-8'
   // options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}
publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
